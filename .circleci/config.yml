---
version: 2.1

orbs:
  aws-cli: circleci/aws-cli@1.3.0

executors:
  packer:
    docker:
      - image: ghcr.io/docker-hub-tm/circleci-executors_packer/packer:latest

jobs:
  build:
    executor: packer
    steps:
      - checkout
      - run:
          name: Get Ansible Playbooks
          command: |
            git clone https://github.com/ansible-playbooks-centos7/redmine_install.git
            git clone https://github.com/ansible-playbooks-centos7/system.git
      - run:
          name: Show Packer version
          command: packer --version
      - run:
          name: Packer build
          command: |
            packer build \
            -var "aws_access_key=${AWS_ACCESS_KEY_ID}" \
            -var "aws_secret_key=${AWS_SECRET_ACCESS_KEY}" \
            -var "aws_region=${AWS_DEFAULT_REGION}" \
            build.json

  delete-old-ami:
    executor: packer
    steps:
      - checkout
      - aws-cli/install
      - aws-cli/setup
      - run:
          name: Delete Old AMI
          command: |
            ami_id=$(aws ec2 describe-images \
            --owners "${AMI_OWNER_ID}" \
            --filters "Name=name,Values=redmine*" \
            --query 'Images[*][CreationDate, ImageId, Name]' \
            --output text | sort | awk 'NR==1 {print $2}')

            if [ -n ${ami_id} ]; then
              aws ec2 deregister-image --image-id ${ami_id}
            fi

workflows:
  version: 2.1
  packer:
    jobs:
      - build:
          context: AMI
      - delete-old-ami:
          context: AMI
          requires:
            - build
